openapi: 3.0.0
info:
  title: Woodline Kitchen Bot
  description: Woodline kitchen server api 
  version: 1.0.0

tags:
  - name: Auth
    description: Api for Auth
  - name: User
    descriptions: Api for users
  - name: Product
    descriptions: Api for products
  - name: Food
    description: Api for Foods
  - name: Order
    description: Api for Orders
  - name: Settings
    description: Settings 

paths:
  /user:
    get:
      summary: Retrieve a list of books
      tags:
        - User
      parameters:
        - name: page
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 1
        - name: size
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 10
      responses:
        200:
          description: Successfully retrieved the list of books
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /user/send-message:
    post:
      summary: Send messages
      tags:
        - User
      parameters:
        - name: body
          in: body
          description: User data
          required: true
          schema:
            $ref: '#/definitions/SendMessage'
      responses:
        200:
          description: ok

  /user/status/{user}:
    put:
      summary: Verify User
      tags:
        - User
      parameters:
        - name: user
          in: path
          type: string
          required: true
        - name: is_active
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserStatus'
      responses:
        200:
          description: ok

  /user/verify/{user}:
    put:
      summary: Verify User
      tags:
        - User
      parameters:
        - name: user
          in: path
          type: string
          required: true
      responses:
        200:
          description: ok 
  /user/org/{user}:
    put:
      summary: change org
      tags:
        - User
      parameters:
        - name: user
          in: path
          required: true
          type: string
        - name: org
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangeOrg'


  /auth:
    get:
      summary: get info
      tags:
        - Auth

    post:
      summary: login user
      tags:
        - Auth
      parameters:
        - name: body
          in: body
          description: User data
          required: true
          schema:
            $ref: '#/definitions/UserInput'
      responses:
        200:
          description: User created
          schema:
            $ref: '#/definitions/Login'
  /org:
    get:
      summary: Retrieve a list of books
      tags:
        - Org
      parameters:
        - name: page
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 1
        - name: size
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 10
      responses:
        200:
          description: Successfully retrieved the list of books
          schema:
            type: array
            items:
              $ref: '#/definitions/Org'
  
    post:
      summary: Org
      tags:
        - Org
      parameters:
        - name: body
          in: body
          description: create org
          required: true
          schema:
            $ref: '#/definitions/CreateOrg'
      responses:
        200:
          description: Org created
  /order:
    get:
      summary: Get orders
      tags:
        - Order
      parameters:
        - name: page
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 1
        - name: size
          in: query
          description: ''
          type: integer
          minimum: 10
          default: 10 
      responses:
        200:
          description: get order



  /product:
    get:
      summary: Retrieve a list of products
      tags:
        - Product 
      parameters:
        - name: page
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 1
        - name: size
          in: query
          description: ''
          type: integer
          minimum: 10
          default: 10 
      responses:
        200:
          description: Successfully retrieved the list of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
    post:
      summary: Create Product
      tags:
        - Product
      parameters:
        - name: body
          in: body
          description: create Product
          required: true
          schema:
            $ref: '#/definitions/CreateProduct'
      responses:
        200:
          description: Org created
      
  /food:
    get:
      summary: Retrieve a list of foods
      tags:
        - Food
      parameters:
        - name: page
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 1
        - name: size
          in: query
          description: ''
          type: integer
          minimum: 1
          default: 10
      responses:
        200:
          description: Successfully retrieved the list of books
          schema:
            type: array
            items:
              $ref: '#/definitions/Food'
    post:
      summary: Create Food
      tags:
        - Food
      parameters:
        - name: body
          in: body
          description: Create Food
          required: true
          schema: 
            $ref: '#/definitions/CreateFood'  

definitions:
  User:
    type: object
    properties:
      id:
        type: string
      first_name:
        type: string
        example: "Javohir"
      last_name: 
        type: string
        example: "Abdumalikov"
      phone_number:
        type: string
        example: "998909336272"
      balance:
        type: number
        example: 0
      telegram_id:
        type: number 
        example: 458985665
      is_active: 
        type: boolean
      is_verified:
        type: boolean
      roles:
        type: array
        example: ["user"]
      language_code: 
        type: string
        example: "uz"
      createdAt:
        type: string
        example: "2023-09-09T07:12:45.784Z"

  Product:
    type: object
    properties:
      name:
        type: string
        example: "Non"
      unit:
        type: string
        example: "dona"
      amount:
        type: number 
        example: 0
      min_amount:
        type: number
        example: 5 
  CreateProduct:
    type: object
    properties:
      name:
        type: string
      org:
        type: string
      unit:
        type: string
  Food:
    type: object
    properties: 
      name:
        type: string
        example: "Shaftoli"
      cost:
        type: number
        example: 5000
      products:
        type: array
        example: []
      org:
        type: string
        example: 'a878as8as18as187s'
      category:
        type: string
        example: 'drinks'
  CreateFood:
    type: object
    properties:
      name:
        type: string
      cost:
        type: number
      products:
        type: array
        items:
          type: object
          properties:
            product:
              type: string
            amount:
              type: number
      org: 
        type: string
      category:
        type: string

  UserInput:
    type: object
    properties:
      phone_number:
        type: string
      password:
        type: string
  UserStatus:
    type: object
    properties:
      is_active:
        type: boolean
  Login:
    type: object
    properties:
      token: 
        type: string

  CreateOrg:
    type: object
    properties:
      name_org:
        type: string
  Org:
    type: object
    properties:
      name_org:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
  SendMessage: 
    type: object
    properties:
      message:
        type: string
      org:
        type: string 

  ChangeOrg: 
    type: object
    properties:
      org: 
        type: string
    
